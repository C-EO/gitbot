{
  "meta": {
    "name": "en",
    "full_name": "english",
    "localized_name": "english",
    "flag": ":flag_um:"
  },
  "errors": {
    "missing_required_argument": "You didn't pass in all of the arguments, **use** `git --help` **for info.**",
    "command_on_cooldown": "**You're on cooldown!** Please try again in {0}s",
    "max_concurrency_reached": "This command is experiencing exceptional traffic. **Please try again in a few seconds.**",
    "bot_missing_permissions": "**I am missing permissions required to do this!** I need {0}",
    "missing_permissions": "**You're missing permissions required to do this!** You need {0}",
    "no_private_message": "This command can only be used **inside a server!**"
  },
  "events": {
    "mention": ":tada: **Hi! I'm GitBot.**\nMy prefix is `git`\nType `git --help` for a list of my commands."
  },
  "generic": {
    "nonexistent": {
      "user": {
        "base": "This user **doesn't exist!**",
        "qa": "You don't have a quick access user configured! **Type** `git config` **to do it.**",
        "qa_changed": "The user you had saved has changed their name or deleted their account. Please **re-add them** using `git --config user`"
      },
      "repo": {
        "base": "This repository **doesn't exist!**",
        "qa": "You don't have a quick access repo configured! **Type** `git config` **to do it.**",
        "qa_changed": "The repo you had saved has changed its name or has been deleted. Please **re-add them** using `git --config repo`",
        "saved_repo_unavailable": "You invoked the command with your stored repo, but it's unavailable. **Please re-add it.**",
        "no_pulls_with_state": "This repo doesn't have any **{0} pull requests!**",
        "no_issues_with_state": "This repo doesn't have any **{0} issues!**",
        "no_pulls_with_state_qa": "Your saved repo doesn't have any **{0} pull requests!**",
        "no_issues_with_state_qa": "Your saved repo doesn't have any **{0} issues!**"
      },
      "org": {
        "base": "This organization **doesn't exist!**",
        "qa": "You don't have a quick access organization configured! **Type** `git config` **to do it.**",
        "qa_changed": "The organization you had saved has changed its name or was deleted. Please **re-add it** using `git --config org`"
      },
      "repos": {
        "user": "This user doesn't have any **public repos!**",
        "org": "This organization doesn't have any **public repos!**"
      },
      "gist": "This user doesn't have any **public gists!**",
      "path": "This path **doesn't exist!**",
      "user_or_org": "This user or organization **doesn't exist!**",
      "pr_number": "A pull request with this number **doesn't exist!**",
      "issue_number": "An issue with this number **doesn't exist!**",
      "qa": "**You don't have any quick access data configured!** Use `git config` to do it"
    },
    "issue": {
      "invalid_state": "`{0}` is not a **valid issue state!** (Try `open` or `closed`)"
    },
    "pr": {
      "invalid_state": "`{0}` is not a **valid pull request state!** (Try `open`, `closed` or `merged`)"
    },
    "invalid_index": "{0} is not a valid number **from the list!**"
  },
  "glossary": {
    "github_repo_term": "repository",
    "gitlab_repo_term": "project",
    "website": "website"
  },
  "privacy_policy": {
    "title": "Privacy Policy",
    "what": {
      "title": "What is stored?",
      "body": "The only data stored are your User ID and quick access users, repos and orgs."
    },
    "use": {
      "title": "How is all this used anyway?",
      "body": "It's used to provide storage for your saved users, repos and organizations, your User ID is essential for the Bot to know, what data is yours."
    },
    "access": {
      "title": "Who has access to this data?",
      "body": "Only the Bot's developer has access, no one else. Your data isn't viewed or accessed in any way unless it's required to provide the service."
    },
    "deletion": {
      "title": "How can I get rid of this stored data?",
      "body": "You can do that very easily by using the `git config -delete` command!"
    },
    "author": {
      "title": "Who wrote this and can this be changed?",
      "body": "This privacy policy was written by [wulf](https://dsc.bio/wulf), the Bot's developer, and yes, all of this is subject to change in the future."
    }
  },
  "uptime": "**I have been online for:**\n{0}",
  "invite": {
    "server": "Support Server",
    "invite_verb": "Invite",
    "tagline": "Invite me to your server!"
  },
  "ping": "**My ping is:**\n**{0}** milliseconds",
  "vote": "Vote for GitBot!",
  "stats": {
    "title": "Bot Stats",
    "body": "General stats regarding the Bot's functioning.",
    "system": "System Usage",
    "people": {
      "title": "People",
      "body": "I'm in **{0}** servers,\nand have **{1}** users"
    },
    "code": {
      "title": "Code",
      "body": "I am **{0}** lines of code,\nrunning on **{1}**"
    }
  },
  "license": {
    "error": "I couldn't find a license matching the name you provided!",
    "description": "Description",
    "implementation": "Implementation",
    "conditions": "Conditions",
    "limitations": "Limitations",
    "permissions": "Permissions",
    "none": "None"
  },
  "info": {
    "no_info": "I couldn't fetch any info regarding the link you provided!"
  },
  "lines": {
    "more_than_25": "I cannot show **more than 25 lines**, sorry!",
    "no_content": "There **isn't any content** on these lines!",
    "private_or_inaccessible": "That {0} is **private or otherwise inaccessible.**",
    "nonexistent": "That {0} **doesn't exist!**",
    "no_lines_mentioned": "The link has to be a GitHub or GitLab URL **mentioning lines!**"
  },
  "user": {
    "repos": {
      "no_public": "This user doesn't have any **public repos!**",
      "more": "View {0} more on Github",
      "owner": "{0}'s repos"
    },
    "info": {
      "glossary": ["Bio", "Info", "Links", "Website"],
      "title": "{0}'s Profile",
      "joined_at": "Joined GitHub on {0}",
      "company": "Works at {0}",
      "no_company": "Isn't part of a company",
      "orgs": {
        "plural": "Belongs to {0} organizations",
        "singular": "Belongs to one organization",
        "no_orgs": "Doesn't belong to any organizations"
      },
      "followers": {
        "plural": "Has [{0} followers]({1})",
        "singular": "Has only [one follower]({0})",
        "no_followers": "Isn't followed by anyone"
      },
      "linking_word": "and",
      "following": {
        "plural": "follows [{0} users]({1})",
        "singular": "follows only [one person]({0})",
        "no_following": "doesn't follow anyone, yet"
      },
      "repos": {
        "plural": "Has a total of [{0} repositories]({1})",
        "singular": "Has only [one repository]({0})",
        "no_repos": "Has no repositories, yet"
      },
      "contributions": "{0} contributions this year, {0} today"
    }
  },
  "org": {
    "repos": {
      "owner": "{0}'s repos",
      "more": "View {0} more on Github"
    },
    "info": {
      "glossary": ["Description", "Info", "Links", "Website"],
      "title": "{0}'s Profile",
      "created_at": "Created on {0}",
      "members": "Has [{0} public members]({1})",
      "one_members": "Has only [one public member]({0})",
      "repos": {
        "plural": "Has a total of [{0} repositories]({1})",
        "singular": "Has only [one repository]({0})",
        "no_repos": "Has no repositories, yet"
      },
      "location": "Is based in {0}"
    }
  },
  "repo": {
    "info": {
      "glossary": ["Description", "Info", "Links", "Topics", "Homepage"],
      "created_at": "Created on {0}",
      "issues": {
        "plural": "Has [{0} open issues]({1})",
        "singular": "Has only [one open issue]({0})",
        "no_issues": "Doesn't have any open issues"
      },
      "forks": {
        "plural": "Has been forked [{0} times]({1})",
        "singular": "Has been forked [only once]({0})",
        "no_forks": "No one has forked this repo, yet"
      },
      "languages": {
        "main": "Written mainly using {0}",
        "with_num": "Written in {0} languages, mainly {1}"
      },
      "watchers": {
        "plural": "Has [{0} watchers]({1})",
        "singular": "Has only [one watcher]({0})",
        "no_watchers": "Has no watchers"
      },
      "linking_word": "and",
      "stargazers": {
        "plural": "[{0} stargazers]({1})",
        "singular": "[one stargazer]({0})",
        "no_stargazers": "no stargazers"
      },
      "fork_notice": "This repo is a fork of {0}",
      "license": "Licensed under the {0}"
    },
    "files": {
      "view_more": "View {0} more on GitHub"
    },
    "download": {
      "wait": "Give me a second while I download the file...",
      "file_too_big": "That file is too big, **please download it directly here:**\n{0}",
      "done": "Here's the source code of **{0}!**"
    },
    "issues": {
      "title": "Latest {0} issues in {1}",
      "footer_tip": "You can quickly inspect a specific issue from the list by typing its number!\nYou can type cancel to quit."
    },
    "pulls": {
      "title": "Latest {0} pull requests in {1}",
      "footer_tip": "You can quickly inspect a specific PR from the list by typing its number!\nYou can type cancel to quit."
    }
  },
  "gist": {
    "glossary": ["Contents", "Info"],
    "title": "{0}'s gists",
    "created_at": "Created by [{0}]({1}) on {2}",
    "updated_at": "Last updated on {0}",
    "stargazers": {
      "plural": "Has [{0} stargazers]({1})",
      "singular": "Has [one stargazer]{0}",
      "no_stargazers": "Has no stargazers"
    },
    "linking_word": "and",
    "comments": {
      "plural": "[{0} comments]({1})",
      "singular": "[one comment]({0})",
      "no_comments": "no comments"
    },
    "no_list": "You didn't see the gist list because this user has only one gist.",
    "footer": "Ten latest gists from {0}.\nTo inspect a specific gist, simply send its number in this channel.",
    "index_error": "Please pick a number **between 1 and {0}**",
    "content_notice": "The content is a preview of the first file of the gist",
    "timeout": {
      "title": "Timed Out",
      "tip": "To pick an option, simply send a number next time!"
    }
  },
  "config": {
    "default": {
      "brief_1": "**In this section you can configure various aspects of your experience**",
      "title": "**Quick Access**",
      "brief_2": "These commands allow you to save a user, repo or org to get with a short command.",
      "commands": {
        "user": "Access a saved user with `git user`",
        "org": "Access a saved organization with `git org`",
        "repo": "Access a saved repo with `git repo`",
        "feed": "Subscribe to new releases of a repository"
      },
      "deletion": "**You can delete stored data by typing** `git config --delete`",
      "footer": "To see what you have saved, use git config --show"
    },
    "show": {
      "title": "Your GitBot Config",
      "heading": "**Quick Access:**",
      "list": {
        "user": "User: {0}",
        "org": "Organization: {0}",
        "repo": "Repo: {0}",
        "feed": "Release Feed:"
      },
      "item_not_set": "Not set",
      "item_not_configured": "Not configured"
    }
  }
}
