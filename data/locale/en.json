{
  "meta": {
    "name": "en",
    "full_name": "english",
    "localized_name": "english",
    "flag": ":flag_um:"
  },
  "errors": {
    "missing_required_argument": "You didn't pass in all of the arguments, **use** `git --help` **for info.**",
    "command_on_cooldown": "**You're on cooldown!** Please try again in {0}s",
    "max_concurrency_reached": "This command is experiencing exceptional traffic. **Please try again in a few seconds.**",
    "bot_missing_permissions": "**I am missing permissions required to do this!** I need {0}",
    "missing_permissions": "**You're missing permissions required to do this!** You need {0}",
    "no_private_message": "This command can only be used **inside a server!**"
  },
  "argument_placeholders": {
    "user": "username",
    "org": "organization",
    "repo": "repo",
    "issue_number": "issue number",
    "pr_number": "pr number",
    "state": "state",
    "license": "license",
    "link": "link",
    "lang": "language",
    "link_or_codeblock": "link or codeblock"
  },
  "events": {
    "mention": ":tada: **Hi! I'm GitBot.**\nMy prefix is `git`\nType `git --help` for a list of my commands."
  },
  "generic": {
    "nonexistent": {
      "user": {
        "base": "This user **doesn't exist!**",
        "qa": "You don't have a quick access user configured! **Type** `git config` **to do it.**",
        "qa_changed": "The user you had saved has changed their name or deleted their account. Please **re-add them** using `git --config user`"
      },
      "repo": {
        "base": "This repository **doesn't exist!**",
        "qa": "You don't have a quick access repo configured! **Type** `git config` **to do it.**",
        "qa_changed": "The repo you had saved has changed its name or has been deleted. Please **re-add them** using `git --config repo`",
        "saved_repo_unavailable": "You invoked the command with your stored repo, but it's unavailable. **Please re-add it.**",
        "no_pulls_with_state": "This repo doesn't have any **{0} pull requests!**",
        "no_issues_with_state": "This repo doesn't have any **{0} issues!**",
        "no_pulls_with_state_qa": "Your saved repo doesn't have any **{0} pull requests!**",
        "no_issues_with_state_qa": "Your saved repo doesn't have any **{0} issues!**"
      },
      "org": {
        "base": "This organization **doesn't exist!**",
        "qa": "You don't have a quick access organization configured! **Type** `git config` **to do it.**",
        "qa_changed": "The organization you had saved has changed its name or was deleted. Please **re-add it** using `git --config org`"
      },
      "repos": {
        "user": "This user doesn't have any **public repos!**",
        "org": "This organization doesn't have any **public repos!**"
      },
      "gist": "This user doesn't have any **public gists!**",
      "path": "This path **doesn't exist!**",
      "user_or_org": "This user or organization **doesn't exist!**",
      "pr_number": "A pull request with this number **doesn't exist!**",
      "issue_number": "An issue with this number **doesn't exist!**",
      "qa": "**You don't have any quick access data configured!** Use `git config` to do it"
    },
    "issue": {
      "invalid_state": "`{0}` is not a **valid issue state!** (Try `open` or `closed`)"
    },
    "pr": {
      "invalid_state": "`{0}` is not a **valid pull request state!** (Try `open`, `closed` or `merged`)"
    },
    "invalid_index": "{0} is not a valid number **from the list!**",
    "unspecified": "**Something went wrong,** please report this in the support server."
  },
  "glossary": {
    "github_repo_term": "repository",
    "gitlab_repo_term": "project",
    "website": "website"
  },
  "privacy_policy": {
    "title": "Privacy Policy",
    "what": {
      "title": "What is stored?",
      "body": "The only data stored are your User ID and quick access users, repos and orgs."
    },
    "use": {
      "title": "How is all this used anyway?",
      "body": "It's used to provide storage for your saved users, repos and organizations, your User ID is essential for the Bot to know, what data is yours."
    },
    "access": {
      "title": "Who has access to this data?",
      "body": "Only the Bot's developer has access, no one else. Your data isn't viewed or accessed in any way unless it's required to provide the service."
    },
    "deletion": {
      "title": "How can I get rid of this stored data?",
      "body": "You can do that very easily by using the `git config -delete` command!"
    },
    "author": {
      "title": "Who wrote this and can this be changed?",
      "body": "This privacy policy was written by [wulf](https://dsc.bio/wulf), the Bot's developer, and yes, all of this is subject to change in the future."
    }
  },
  "uptime": "**I have been online for:**\n{0}",
  "invite": {
    "server": "Support Server",
    "invite_verb": "Invite",
    "tagline": "Invite me to your server!"
  },
  "ping": "**My ping is:**\n**{0}** milliseconds",
  "vote": "Vote for GitBot!",
  "stats": {
    "title": "Bot Stats",
    "body": "General stats regarding the Bot's functioning.",
    "system": "System Usage",
    "people": {
      "title": "People",
      "body": "I'm in **{0}** servers,\nand have **{1}** users"
    },
    "code": {
      "title": "Code",
      "body": "I am **{0}** lines of code,\nrunning on **{1}**"
    }
  },
  "license": {
    "error": "I couldn't find a license matching the name you provided!",
    "description": "Description",
    "implementation": "Implementation",
    "conditions": "Conditions",
    "limitations": "Limitations",
    "permissions": "Permissions",
    "none": "None"
  },
  "info": {
    "no_info": "I couldn't fetch any info regarding the link you provided!"
  },
  "snippets": {
    "length_limit_exceeded": "I cannot show **more than {0} lines**, sorry!",
    "no_content": "There **isn't any content** on these lines!",
    "private_or_inaccessible": "That {0} is **private or otherwise inaccessible.**",
    "nonexistent": "That {0} **doesn't exist!**",
    "no_lines_mentioned": "The link has to be a GitHub or GitLab URL **mentioning lines!**"
  },
  "user": {
    "repos": {
      "no_public": "This user doesn't have any **public repos!**",
      "more": "View {0} more on Github",
      "owner": "{0}'s repos"
    },
    "info": {
      "glossary": ["Bio", "Info", "Links", "Website"],
      "title": "{0}'s Profile",
      "joined_at": "Joined GitHub on {0}",
      "company": "Works at {0}",
      "no_company": "Isn't part of a company",
      "orgs": {
        "plural": "Belongs to {0} organizations",
        "singular": "Belongs to one organization",
        "no_orgs": "Doesn't belong to any organizations"
      },
      "followers": {
        "plural": "Has [{0} followers]({1})",
        "singular": "Has only [one follower]({0})",
        "no_followers": "Isn't followed by anyone"
      },
      "linking_word": "and",
      "following": {
        "plural": "follows [{0} users]({1})",
        "singular": "follows only [one person]({0})",
        "no_following": "doesn't follow anyone, yet"
      },
      "repos": {
        "plural": "Has a total of [{0} repositories]({1})",
        "singular": "Has only [one repository]({0})",
        "no_repos": "Has no repositories, yet"
      },
      "contributions": "{0} contributions this year, {0} today"
    }
  },
  "org": {
    "repos": {
      "owner": "{0}'s repos",
      "more": "View {0} more on Github"
    },
    "info": {
      "glossary": ["Description", "Info", "Links", "Website"],
      "title": "{0}'s Profile",
      "created_at": "Created on {0}",
      "members": "Has [{0} public members]({1})",
      "one_members": "Has only [one public member]({0})",
      "repos": {
        "plural": "Has a total of [{0} repositories]({1})",
        "singular": "Has only [one repository]({0})",
        "no_repos": "Has no repositories, yet"
      },
      "location": "Is based in {0}"
    }
  },
  "repo": {
    "info": {
      "glossary": ["Description", "Info", "Links", "Topics", "Homepage"],
      "created_at": "Created on {0}",
      "issues": {
        "plural": "Has [{0} open issues]({1})",
        "singular": "Has only [one open issue]({0})",
        "no_issues": "Doesn't have any open issues"
      },
      "forks": {
        "plural": "Has been forked [{0} times]({1})",
        "singular": "Has been forked [only once]({0})",
        "no_forks": "No one has forked this repo, yet"
      },
      "languages": {
        "main": "Written mainly using {0}",
        "with_num": "Written in {0} languages, mainly {1}"
      },
      "watchers": {
        "plural": "Has [{0} watchers]({1})",
        "singular": "Has only [one watcher]({0})",
        "no_watchers": "Has no watchers"
      },
      "linking_word": "and",
      "stargazers": {
        "plural": "[{0} stargazers]({1})",
        "singular": "[one stargazer]({0})",
        "no_stargazers": "no stargazers"
      },
      "fork_notice": "This repo is a fork of {0}",
      "license": "Licensed under the {0}"
    },
    "files": {
      "view_more": "View {0} more on GitHub"
    },
    "download": {
      "wait": "Give me a second while I download the file...",
      "file_too_big": "That file is too big, **please download it directly here:**\n{0}",
      "done": "Here's the source code of **{0}!**"
    },
    "issues": {
      "title": "Latest {0} issues in {1}",
      "footer_tip": "You can quickly inspect a specific issue from the list by typing its number!\nYou can type cancel to quit."
    },
    "pulls": {
      "title": "Latest {0} pull requests in {1}",
      "footer_tip": "You can quickly inspect a specific PR from the list by typing its number!\nYou can type cancel to quit."
    }
  },
  "gist": {
    "glossary": ["Contents", "Info"],
    "title": "{0}'s gists",
    "created_at": "Created by [{0}]({1}) on {2}",
    "updated_at": "Last updated on {0}",
    "stargazers": {
      "plural": "Has [{0} stargazers]({1})",
      "singular": "Has [one stargazer]{0}",
      "no_stargazers": "Has no stargazers"
    },
    "linking_word": "and",
    "comments": {
      "plural": "[{0} comments]({1})",
      "singular": "[one comment]({0})",
      "no_comments": "no comments"
    },
    "no_list": "You didn't see the gist list because this user has only one gist.",
    "footer": "Ten latest gists from {0}.\nTo inspect a specific gist, simply send its number in this channel.",
    "index_error": "Please pick a number **between 1 and {0}**",
    "content_notice": "The content is a preview of the first file of the gist",
    "timeout": {
      "title": "Timed Out",
      "tip": "To pick an option, simply send a number next time!"
    }
  },
  "issue": {
    "glossary": ["Body", "Info", "Labels"],
    "stored_no_number": "If you want to access the stored repo's issues, please pass in an **issue number!**",
    "second_argument_number": "The second argument must be an issue **number!**",
    "created_at": "Created by {0} on {1}",
    "closed_at": "Closed on {0}",
    "comments": {
      "plural": "Has {0} comments",
      "singular": "Has one comment",
      "no_comments": "Has no comments"
    },
    "linking_word": "and",
    "assignees": {
      "plural": "{0} assignees",
      "singular": "one assignee",
      "no_assignees": "no assignees"
    },
    "participants": {
      "plural": "{0} people have participated in this issue",
      "singular": "One person has participated in this issue"
    }
  },
  "pr": {
    "glossary": ["Info", "Participants", "Assignees", "Reviewers", "Labels"],
    "stored_no_number": "If you want to access the stored repo's PRs, please pass in a **pull request number!**",
    "second_argument_number": "The second argument must be a pull request **number!**",
    "created_at": "Created by {0} on {1}",
    "closed_at": "Closed on {0}",
    "comments": {
      "plural": "Has {0} comments",
      "singular": "Has one comment",
      "no_comments": "Has no comments"
    },
    "linking_word_1": "and",
    "reviews": {
      "plural": "{0} reviews",
      "singular": "one review",
      "no_reviews": "no reviews"
    },
    "files": {
      "plural": "[{0} files]({1}) have been changed",
      "singular": "[One file]({0}) was changed"
    },
    "linking_word_2": "in",
    "commits": {
      "plural": "{0} commits",
      "singular": "one commit"
    },
    "additions": {
      "plural": "Updated with {0} additions",
      "singular": "Updated with one addition",
      "no_additions": "Updated with no additions"
    },
    "linking_word_3": "and",
    "deletions": {
      "plural": "{0} deletions",
      "singular": "one deletion",
      "no_deletions": "no deletions"
    },
    "more_items": "and {0} more",
    "fork": "This pull request came from a fork.",
    "no_participants": "No participants",
    "no_assignees": "No assignees",
    "no_reviewers": "No reviewers"
  },
  "loc": {
    "file_too_big": "Sorry, I can't process this repo as it's **too big!**",
    "title": "Lines of Code in {0}",
    "description": "A total of **{0}** lines across **{1}** files.",
    "stats": {
      "code": "Code",
      "blank": "Blank",
      "comments": "Comments",
      "detailed": "Detailed"
    },
    "footer": "This command is powered by the CLOC CLI tool."
  },
  "commits": {
    "dm_title": "Webhook URL",
    "dm_failed": "**I can't send you a DM**, so we can't proceed. Process aborted, webhook deleted.",
    "description": "To configure commit feeds, you have to add a webhook to your repo of choice.\nTo do that, **follow the step-by-step instructions below.**",
    "instructions": [
      "Navigate to your repo and open the settings",
      "Select `Webhooks` on the left",
      "Click on `Add webhook`",
      "Paste the URL you just received in your DMs as the `Payload URL`",
      "Change `Content type` to `application/json`",
      "Select `send me everything`",
      "Click `Add webhook`"
    ],
    "footer": "And that's it! You will now receive a notification whenever there's a new commit!",
    "webhook_failed": "**Webhook creation failed.** Try verifying my permissions!",
    "do_not_share_warning": "**Do not share the webhook URL**"
  },
  "config": {
    "default": {
      "brief_1": "**In this section you can configure various aspects of your experience**",
      "title": "**Quick Access**",
      "brief_2": "These commands allow you to save a user, repo or org to get with a short command.",
      "commands": {
        "user": "Access a saved user with `git user`",
        "org": "Access a saved organization with `git org`",
        "repo": "Access a saved repo with `git repo`",
        "locale": "Change the Bot's language",
        "feed": "Subscribe to new releases of a repository"
      },
      "deletion": "**You can delete stored data by typing** `git config --delete`",
      "footer": "To see what you have saved, use git config --show",
      "embed_title": "GitBot Config"
    },
    "show": {
      "title": "Your GitBot Config",
      "qa": {
        "heading": "**Quick Access:**",
        "list": {
          "user": "User: {0}",
          "org": "Organization: {0}",
          "repo": "Repo: {0}"
        }
      },
      "guild": {
        "heading": "**Server Settings:**",
        "list": {
          "feed": "Release Feed:"
        }
      },
      "accessibility": {
        "heading": "**Accessibility:**",
        "list": {
          "locale": "Language: {0}"
        }
      },
      "item_not_set": "Not set",
      "item_not_configured": "Not configured"
    },
    "feed": {
      "cancelled": "Release Feed channel setup **cancelled.**",
      "no_arg": "Please pass in a repository which you wish to follow!",
      "invalid_channel": "**That is not a valid channel!** Try again, or type `cancel` to quit.",
      "already_logged": "This repo's releases are **already being logged!**",
      "success": "New **{0}** releases will now be logged.",
      "embeds": {
        "start": {
          "title": "Release Feed channel configuration",
          "description": "It appears that you don't have a Release Feed channel configured yet.\n**Let's configure one now, shall we?**\n\nSimply specify the channel you want to receive the updates in below by typing its name or mention, or type `create` for the bot to make the channel for you.",
          "footer": "You can type cancel to quit at any point."
        },
        "success": {
          "title": "Release Feed channel configured!",
          "description": "You can now add repos whose new updates should be logged in {0} by using `git config feed {{repo}}`. Each time there is a new release, an embed will show up with some info and changes.",
          "footer": "{0} has already been added :)"
        },
        "limit_reached": {
          "title": "Release Feed repo limit reached!",
          "description": "This guild has reached the **limit of 3 release feed repos.** You can remove a previously added repo by typing `git config -delete feed`",
          "footer": "You need the Manage Channels permission to do that."
        },
        "timeout": {
          "title": "Timed Out",
          "footer": "Simply send a channel name/mention next time!"
        }
      }
    },
    "qa_set": {
      "user": "Quick access user set to **{0}**",
      "org": "Quick access organization set to **{0}**",
      "repo": "Quick access repo set to **{0}**"
    },
    "locale": {
      "success": "Bot language set to **{0}**.",
      "failure": "`{0}` is not a **valid, supported language!**",
      "match_confirmation_embed": {
        "title": "Confirm Language",
        "description": "Your requested language didn't match any of the available ones in full, but it was **very close to `{0}`**. Did you mean to choose that one?",
        "footer": "React with an appropriate emoji to pick an option!"
      },
      "timeout_embed": {
        "title": "Timed Out",
        "footer": "Simply pick an option next time!"
      },
      "title": "Bot Language",
      "description": "Here you can change the language of the Bot.\nSimply type {0}\nAll translations are provided by our [community](https://github.com/statch/gitbot/tree/main/data/locale)",
      "cancelled": "Language change **cancelled.**"
    },
    "delete": {
      "default": {
        "title": "Delete Quick Access Data",
        "description": "**You can delete stored quick access data by running the following commands:**",
        "commands": {
          "user": "delete the quick access user",
          "org": "delete the quick access organization",
          "repo": "delete the quick access repo",
          "feed": "view options regarding deleting release feed data",
          "all": "delete all of your quick access data"
        }
      },
      "feed": {
        "no_channel": "You don't have a release feed channel configured!",
        "nothing_deleted": "You don't have a release feed configured, so **nothing was deleted.**",
        "default": {
          "title": "Delete Release Feed data",
          "description": "**You can delete stored release feed data by running the following commands:**",
          "commands": {
            "repo": "unsubscribe from a specific repo",
            "all": "unsubscribe from all repos",
            "total": "unsubscribe from all releases and delete the feed webhook"
          }
        },
        "repo": {
          "success": "`{0}` releases will **no longer be logged.**",
          "not_logged": "That repo's releases are **not currently logged!**"
        },
        "all": {
          "success": "All release feeds were **closed successfully.**"
        },
        "total": {
          "success": "The release feed channel has been **closed successfully.**"
        }
      },
      "user": {
        "success": "Saved **user deleted.**",
        "not_saved": "You don't have a user saved!"
      },
      "org": {
        "success": "Saved **organization deleted.**",
        "not_saved": "You don't have an organization saved!"
      },
      "repo": {
        "success": "Saved **repo deleted.**",
        "not_saved": "You don't have a repo saved!"
      },
      "locale": "Bot language reset to **English**.",
      "all": {
        "success": "All of your stored data was **successfully deleted.**",
        "not_saved": "It appears that **you don't have anything stored!**"
      }
    }
  },
  "help": {
    "alias_note": "You can find a list of aliases by using the git --aliases command",
    "default": {
      "title": "Help",
      "description": "In this section you'll find info and usage of my commands.\n**You can access specific parts by typing:**",
      "sections": {
        "github": "to fetch information from GitHub",
        "info": "for commands that provide information about the bot itself",
        "config": "to store your preferred orgs, repos, user and feeds",
        "utility": "for other useful commands"
      },
      "support_server_note": "**If you have any problems,** [**join the support server!**](https://discord.gg/3e5fwpA)",
      "footer": "You can find a list of aliases by using the git --aliases command"
    },
    "github": {
      "title": "GitHub Help",
      "description": "**Words in curly braces symbolize arguments that the command requires**",
      "commands": {
        "user": {
          "info": "get information about a user",
          "repos": "view a user's repos"
        },
        "org": {
          "info": "get info about an organization",
          "repos": "view an organization's repos"
        },
        "repo_argument_note": "**Important!** Repo commands that follow, require the exact syntax of `owner/repo-name` in place of the `{repo}` argument, ex. `statch/gitbot`",
        "repo": {
          "info": "get info about a repository",
          "files": "get a repo's file structure",
          "issues": "get 10 latest issues from a repo (state defaults to OPEN). If no repo is passed, the stored one is used",
          "pulls": "identical to the above, except for pull requests"
        },
        "gist": "view a user's gists",
        "issue": "get detailed info on an issue",
        "pr": "get detailed info on a pull request"
      }
    },
    "info": {
      "title": "Info Help",
      "description": "These commands have no ties to GitHub and focus on the Bot itself.",
      "commands": {
        "aliases": "get a list of command shorthands",
        "privacy": "the Bot's privacy policy",
        "vote": "vote for the Bot!",
        "stats": "some stats regarding the Bot",
        "uptime": "see the time since the last restart of the Bot",
        "ping": "see the Bot's latency"
      }
    },
    "config": {
      "title": "Config Help",
      "description": "**These commands affect the behavior of the Bot.**",
      "commands": {
        "default": "get detailed info on your options",
        "show": "shows your current settings"
      }
    },
    "utility": {
      "title": "Utility Help",
      "description": "These commands let you fetch various data related to Git and GitHub.",
      "commands": {
        "commits": "quickly set up commit feeds in the current channel",
        "loc": "get lines of code count of a repository with details",
        "license": "get info about a license",
        "snippet": "generate a beautiful image of the lines mentioned in a GitHub or GitLab link or a codeblock",
        "snippet_raw": "get the lines mentioned in a GitHub or GitLab link",
        "info": "automatically inspect a link and get info on it"
      }
    }
  },
  "aliases": {
    "default": {
      "title": "Aliases",
      "description": "In this section you'll find shorthands of my commands\n**You can access specific parts by typing:**",
      "sections": {
        "github": "for GitHub command aliases",
        "info": "for other aliases",
        "config": "for configuration command aliases",
        "utility": "for utility command aliases"
      },
      "footer": "You can find usage of these commands by typing git --help"
    },
    "github": {
      "title": "GitHub Aliases",
      "argument_omitted": "Some commands default to their `info` variant if it's omitted:",
      "generic_aliases": "There are generic aliases as well:",
      "footer": "You can find usage of these commands by typing git --help github"
    },
    "info": {
      "title": "Info Aliases",
      "description": "Shorthands for commands not tied to GitHub itself",
      "footer": "You can find usage of these commands by typing git --help info"
    },
    "config": {
      "title": "Config Aliases",
      "description": "Shorthands for commands used to store your preferred orgs, repos, users and feeds",
      "footer": "You can find usage of these commands by typing git --help config"
    },
    "utility": {
      "title": "Utility Aliases",
      "description": "**Shorthands for commands used to fetch data related to Git and GitHub**",
      "footer": "You can find usage of these commands by typing git --help utility"
    }
  }
}
